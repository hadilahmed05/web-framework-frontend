
# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
- main

pool:
  name: Default

steps:

- task: CmdLine@2
  displayName: 'DOWNLOAD AND INSTALL AQUASEC TRIVY'
  inputs:
    script: |
      sudo apt-get install wget apt-transport-https gnupg lsb-release
      wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
      echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
      sudo apt-get update
      sudo apt-get install trivy
      trivy -v
      pwd

- task: CmdLine@2
  displayName: 'DOWNLOAD JUNIT TEMPLATE'
  inputs:
    script: |
      mkdir -p .azuredevops
      curl -o .azuredevops/junit.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/junit.tpl

- task: CmdLine@2
  displayName: 'RUN AQUASEC TRIVY SCAN AND COPY TO ARTIFACTS STAGING DIRECTORY'
  inputs:
    script: |
      trivy image --severity LOW,MEDIUM --format template --template "@.azuredevops/junit.tpl" -o junit-report-low-med.xml hadil0505/haki_app:haki_finalll
      trivy image --severity HIGH,CRITICAL --format template --template "@.azuredevops/junit.tpl" -o junit-report-high-crit.xml hadil0505/haki_app:haki_finalll

- task: PublishTestResults@2
  displayName: 'Publish Low and Medium Vulnerabilities'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-report-low-med.xml'
    mergeTestResults: true
    failTaskOnFailedTests: false
    testRunTitle: 'Trivy - Low and Medium Vulnerabilities'
  condition: 'always()'

- task: PublishTestResults@2
  displayName: 'Publish High and Critical Vulnerabilities'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-report-high-crit.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true
    testRunTitle: 'Trivy - High and Critical Vulnerabilities'
  condition: 'always()'
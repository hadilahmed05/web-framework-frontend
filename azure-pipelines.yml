
# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
- main

pool:
  name: Default

steps:
- script: |
    # Install default Java Runtime Environment (if not already installed)
    sudo apt-get update
    sudo apt-get install -y default-jre

    # Install specific Java version (Java 17 in this case)
    sudo apt-get install -y openjdk-17-jre

    # Verify the installation
    java -version
  displayName: 'Install Java'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
  displayName: 'Setup Python'

- script: |
    # Download OWASP ZAP version 2.15.0
    wget https://github.com/zaproxy/zaproxy/releases/download/v2.15.0/ZAP_2_15_0_unix.sh

    # Give execute permission to the downloaded script
    chmod +x ZAP_2_15_0_unix.sh

    # Run the installer
    ./ZAP_2_15_0_unix.sh -q

    # Verify the installation
    ./zap.sh -version
  displayName: 'Install OWASP ZAP'

- script: |
    # Start OWASP ZAP in daemon mode
    nohup ./zap.sh -daemon -port 8080 &

    # Wait for OWASP ZAP to start up (adjust if necessary)
    sleep 30

    # Run a scan (change URL to your target)
    curl -X POST "http://localhost:8080/JSON/ascan/action/scan/?url=http://172.213.180.82/&recurse=true"

    # Wait for the scan to complete (adjust if necessary)
    sleep 120

    # Generate the report (optional)
    curl -X GET "http://localhost:8080/OTHER/core/other/htmlreport/?formattype=html" -o zap_report.html
  displayName: 'Run OWASP ZAP Scan'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'zap_report.html'
    artifactName: 'OWASP_ZAP_Report'
  displayName: 'Publish OWASP ZAP Report'